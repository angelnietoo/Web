package Escuela;
import java.util.ArrayList;

class Profesor {
    protected int id; // Identificador único del profesor.
    private String nombre; // Nombre del profesor.
    private int añosEnseñanza; // Años de experiencia enseñando.
    private double salario; // Salario del profesor.
    public String materia; // Materia que imparte el profesor.

    // Constructor: inicializa el id, nombre, años de enseñanza, salario y materia.
    public Profesor(int id, String nombre, int añosEnseñanza, double salario, String materia) {
        this.id = id;
        this.nombre = nombre;
        this.añosEnseñanza = añosEnseñanza;
        this.salario = salario;
        this.materia = materia;
    }

    // Métodos para obtener el nombre, años de enseñanza y salario del profesor.
    public String getNombre() { return nombre; }
    public int getAñosEnseñanza() { return añosEnseñanza; }
    public double getSalario() { return salario; }
}

class Director extends Profesor {
    private double presupuestoEventos; // Presupuesto asignado para eventos.

    // Constructor: inicializa los atributos de director, incluyendo el presupuesto de eventos.
    public Director(int id, String nombre, int añosEnseñanza, double salario, String materia, double presupuestoEventos) {
        super(id, nombre, añosEnseñanza, salario, materia); // Llama al constructor de Profesor.
        this.presupuestoEventos = presupuestoEventos;
    }
}

class Escuela {
    private String nombre; // Nombre de la escuela.
    private int alumnos; // Número de alumnos en la escuela.
    private ArrayList<Profesor> profesores; // Lista de profesores de la escuela.

    // Constructor: inicializa el nombre, número de alumnos y lista de profesores.
    public Escuela(String nombre, int alumnos) {
        this.nombre = nombre;
        this.alumnos = alumnos;
        this.profesores = new ArrayList<>();
    }

    // Devuelve el número total de profesores en la escuela.
    public int totalProfesores() {
        return profesores.size();
    }

    // Encuentra al profesor con el salario más alto
    public Profesor mejorSalario() {
    Profesor mejorSalario = null;
    for (Profesor profesor : profesores) {
        // Si no se ha asignado aún un profesor con el salario más alto o el salario del actual profesor es mayor
        if (mejorSalario == null || profesor.getSalario() > mejorSalario.getSalario()) {
            mejorSalario = profesor;
        }
    }
    return mejorSalario; // Devuelve el profesor con el salario más alto.
    }


    // Asciende a un profesor a director si no lo es ya.
    public boolean ascenderADirector(String nombre) {
        for (int i = 0; i < profesores.size(); i++) {
            Profesor profesor = profesores.get(i);
            // Si se encuentra el profesor y no es ya director
            if (profesor.getNombre().equalsIgnoreCase(nombre)) {
                if (profesor instanceof Director) return false; // Ya es director, no lo asciende.
                // Si no es director, lo convierte en director
                profesores.set(i, new Director(profesor.id, profesor.getNombre(), profesor.getAñosEnseñanza(), profesor.getSalario(), profesor.materia, 5000.0));
                return true;
            }
        }
        return false; // Si no se encuentra el profesor.
    }

    // Calcula los gastos de los profesores con menos años de enseñanza que el máximo permitido.
    // Si el profesor es director, añade 2000 adicionales a los gastos.
    public void calcularGastos(int maxAniosEnsenanza) {
        double total = 0;
        for (Profesor profesor : profesores) {
            // Si el profesor tiene menos años de enseñanza que el máximo
            if (profesor.getAñosEnseñanza() < maxAniosEnsenanza) {
                total += profesor.getSalario(); // Se suman los gastos de salario.
                // Si el profesor es director, se suman 2000 adicionales.
                if (profesor instanceof Director) {
                    total += 2000;
                }
            }
        }
        this.alumnos += total; // Añade los gastos al número total de alumnos (o algún cálculo relacionado).
    }
}
